name: .NET Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'  # Specify the .NET version required for your project

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release

    - name: Run tests
      run: dotnet test --no-build --verbosity normal

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get latest tag
      id: get_tag
      run: |
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null)
        if [ -z "$latest_tag" ]; then
          new_tag="1.0"
        else
          new_tag=$(( ${latest_tag%.*} + 1 )).0
        fi
        echo "latest_tag=$new_tag" >> $GITHUB_ENV

    - name: Create tag
      run: |
        git tag ${{ env.latest_tag }}
        git push origin ${{ env.latest_tag }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.latest_tag }}
        release_name: Release ${{ env.latest_tag }}
        body: |
          Release ${{ env.latest_tag }} of the project.
        draft: false
        prerelease: false
