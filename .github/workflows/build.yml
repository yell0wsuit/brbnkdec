name: .NET Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'  # Specify the .NET version required for your project

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release

    - name: Publish project
      run: dotnet publish --configuration Release --output ./publish

    - name: Archive build artifacts
      run: |
        mkdir release
        Compress-Archive -Path ./publish/* -DestinationPath ./release/brbnkdec.zip
      shell: pwsh

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: brbnkdec
        path: release/brbnkdec.zip

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: brbnkdec
        path: ./release

    - name: Get latest tag
      id: get_tag
      run: |
        latest_tag=$(git tag | sort -V | tail -n 1)
        if [ -z "$latest_tag" ]; then
          new_tag="1.0"
        else
          new_tag=$(( ${latest_tag%.*} + 1 )).0
        fi
        echo "latest_tag=$new_tag" >> $GITHUB_ENV

    - name: Create tag
      run: |
        git tag ${{ env.latest_tag }}
        git push origin ${{ env.latest_tag }}

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.latest_tag }}
        release_name: Release ${{ env.latest_tag }}
        body: |
          Release ${{ env.latest_tag }} of the project.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/brbnkdec.zip
        asset_name: brbnkdec.zip
        asset_content_type: application/zip
